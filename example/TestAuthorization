package TestAdminPortal;


import java.io.File;
import java.util.ArrayList;
import java.util.List;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.firefox.FirefoxBinary;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.firefox.FirefoxProfile;
import org.testng.Assert;
import org.testng.annotations.AfterTest;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.Test;

import AdminPortal.LoginPage;

public class TestAuthorization {
	
	WebDriver driver;
	LoginPage objLogin;
	

	@BeforeTest
	public void setup(){
		File pathToBinary = new File("/home/user/firefox/firefox-bin");
		FirefoxBinary ffBinary = new FirefoxBinary(pathToBinary);
		FirefoxProfile firefoxProfile = new FirefoxProfile();  
		driver = new FirefoxDriver(ffBinary,firefoxProfile);
		driver.get("http://10.118.48.8/stalker_portal/server/adm");
		objLogin = new LoginPage(driver);
	}
	
	@Test (priority = 0) // Расположение и параметры элементов на странице
	public void authForm(){
		ArrayList <WebElement> elems = (ArrayList <WebElement>) objLogin.elems();
		//Assert.assertEquals(elems.get(0).getLocation(), "(489, 373)");;
		Assert.assertEquals((elems.get(1).getLocation()).toString(), "(495, 417)");
//		System.out.println(elems.get(0).getLocation());
//		System.out.println(elems.get(1).getLocation());
//		System.out.println(elems.get(0).getCssValue("border-top-left-radius"));
		
		Assert.assertTrue(elems.get(3).isDisplayed());
	}
	
	@Test (priority = 1) // Авторизация с некорректным паролем
	public void wrongPassword(){
		objLogin.logining("admin", "2");
		WebElement alert = (WebElement) objLogin.alertAuth();		
		Assert.assertEquals(alert.getAttribute("class").toString(), "fa fa-warning txt-danger");
	}
	
	@Test (priority = 2) // Авторизация с некорректным логином
	public void wrongLogin(){
		objLogin.logining("stalker", "1");
		WebElement alert = (WebElement) objLogin.alertAuth();
		Assert.assertEquals(alert.getAttribute("class").toString(), "fa fa-warning txt-danger");
	}
	
	@Test (priority = 3) // Авторизация с незаполненными полями
	public void clearFields(){
		objLogin.logining(null, null);
		objLogin.alertAuth();
	}
	
	@Test (priority = 4) // Корректная авторизация в админке
	public void authCorrect(){
		objLogin.logining("admin", "1");
	}
	
	@AfterTest
	public void finish(){
		driver.quit();
	}

}
